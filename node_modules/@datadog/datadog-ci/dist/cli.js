#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const clipanion_1 = require("clipanion");
const onError = (err) => {
    console.log(err);
    process.exitCode = 1;
};
process.on('uncaughtException', onError);
process.on('unhandledRejection', onError);
const cli = new clipanion_1.Cli({
    binaryLabel: 'Datadog CI',
    binaryName: 'datadog-ci',
    binaryVersion: require('../package.json').version,
});
const commandsPath = `${__dirname}/commands`;
for (const commandFolder of fs_1.default.readdirSync(commandsPath)) {
    const commandPath = `${commandsPath}/${commandFolder}`;
    if (fs_1.default.statSync(commandPath).isDirectory()) {
        // tslint:disable-next-line: no-var-requires
        require(`${commandPath}/cli`).forEach((command) => cli.register(command));
    }
}
if (require.main === module) {
    cli.runExit(process.argv.slice(2), {
        stderr: process.stderr,
        stdin: process.stdin,
        stdout: process.stdout,
    });
}
//# sourceMappingURL=cli.js.map