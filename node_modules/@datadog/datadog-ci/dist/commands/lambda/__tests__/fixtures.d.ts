/// <reference types="jest" />
import { CloudWatchLogs, Lambda } from 'aws-sdk';
import { Cli, Command } from 'clipanion/lib/advanced';
export declare const createMockContext: () => {
    stdout: {
        toString: () => string;
        write: (input: string) => void;
    };
};
export declare const makeCli: () => Cli<import("clipanion/lib/advanced").BaseContext>;
/**
 * Allow for constructors with any amount of parameters.
 * Mainly used for testing when we are creating commands.
 */
export declare type ConstructorOf<T> = new (...args: any[]) => T;
/**
 * Allows to create an instance of any command that
 * extends the Command clss.
 *
 * @param commandClass any class that extends the Command class.
 * @param parameters parameters to use while creating the commandClass
 * @returns the instance of the given command with a mock context attatched.
 */
export declare const createCommand: <T extends Command<import("clipanion/lib/advanced").BaseContext>>(commandClass: ConstructorOf<T>, ...parameters: any[]) => T;
export declare const makeMockLambda: (functionConfigs: Record<string, Lambda.FunctionConfiguration>, layers?: Record<string, Lambda.LayerVersionsListItem> | undefined) => {
    getFunction: jest.Mock<any, any>;
    getLayerVersion: jest.Mock<any, any>;
    listFunctions: jest.Mock<any, any>;
    listTags: jest.Mock<any, any>;
    tagResource: jest.Mock<any, any>;
    updateFunctionConfiguration: jest.Mock<any, any>;
};
export declare const makeMockCloudWatchLogs: (logGroups: Record<string, {
    config: CloudWatchLogs.DescribeLogGroupsResponse;
    filters?: CloudWatchLogs.DescribeSubscriptionFiltersResponse;
}>) => {
    createLogGroup: jest.Mock<any, any>;
    deleteSubscriptionFilter: jest.Mock<any, any>;
    describeLogGroups: jest.Mock<any, any>;
    describeSubscriptionFilters: jest.Mock<any, any>;
    putSubscriptionFilter: jest.Mock<any, any>;
};
export declare const mockAwsAccount = "123456789012";
export declare const mockAwsAccessKeyId = "M0CKAWS4CC3SSK3Y1DSL";
export declare const mockAwsSecretAccessKey = "M0CKAWSs3cR3T4cC3SSK3YS3rv3rL3SSD4tad0g0";
export declare const mockDatadogApiKey = "02aeb762fff59ac0d5ad1536cd9633bd";
export declare const mockDatadogEnv = "sandbox";
export declare const mockDatadogService = "testServiceName";
export declare const mockDatadogVersion = "1.0.0";
