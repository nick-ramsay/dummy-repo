import { CloudWatchLogs } from 'aws-sdk';
import { LogGroupConfiguration } from './interfaces';
export declare enum SubscriptionState {
    Empty = 0,
    CorrectDestination = 1,
    WrongDestinationOwned = 2,
    WrongDestinationUnowned = 3
}
export declare const applyLogGroupConfig: (logs: CloudWatchLogs, config: LogGroupConfiguration) => Promise<void>;
export declare const calculateLogGroupUpdateRequest: (logs: CloudWatchLogs, logGroupName: string, forwarderARN: string) => Promise<LogGroupConfiguration | undefined>;
export declare const calculateLogGroupRemoveRequest: (logs: CloudWatchLogs, logGroupName: string, forwarderARN: string) => Promise<LogGroupConfiguration>;
export declare const hasLogGroup: (logs: CloudWatchLogs, logGroupName: string) => Promise<boolean>;
export declare const getSubscriptionFilterState: (logs: CloudWatchLogs, logGroupName: string, forwarderARN: string) => Promise<SubscriptionState>;
export declare const getSubscriptionFilters: (logs: CloudWatchLogs, logGroupName: string) => Promise<CloudWatchLogs.SubscriptionFilters | undefined>;
