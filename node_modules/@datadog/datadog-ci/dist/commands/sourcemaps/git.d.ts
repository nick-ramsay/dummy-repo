/// <reference types="node" />
import * as simpleGit from 'simple-git';
import { Writable } from 'stream';
export declare const newSimpleGit: () => Promise<simpleGit.SimpleGit>;
export declare const gitRemote: (git: simpleGit.SimpleGit) => Promise<string>;
export declare const stripCredentials: (remote: string) => string;
export declare const gitTrackedFiles: (git: simpleGit.SimpleGit) => Promise<string[]>;
export interface RepositoryData {
    hash: string;
    remote: string;
    trackedFilesMatcher: TrackedFilesMatcher;
}
export declare const getRepositoryData: (git: simpleGit.SimpleGit, stdout: Writable, repositoryURL: string | undefined) => Promise<RepositoryData | undefined>;
export declare class TrackedFilesMatcher {
    private trackedFilenames;
    constructor(trackedFiles: string[]);
    matchSourcemap(stdout: Writable, srcmapPath: string): string[] | undefined;
    matchSources(sources: string[]): string[];
    private getFilename;
}
